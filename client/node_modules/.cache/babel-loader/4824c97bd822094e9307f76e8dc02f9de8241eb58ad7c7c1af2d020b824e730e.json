{"ast":null,"code":"var _jsxFileName = \"/home/vinyselopal/workSpace/chatApp2/client/src/components/ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport socketio from \"socket.io-client\";\n// import { socket, SocketContext } from \"../context/socket\"\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = socketio('ws://localhost:8000', {\n  auth: {\n    token: '123'\n  }\n});\nconst ChatRoom = _ref => {\n  _s();\n  let {\n    userName\n  } = _ref;\n  // const socket = useContext(SocketContext)\n  // console.log(socket)\n  const [chats, setChats] = useState([]);\n  const [myMessage, setMyMessage] = useState('');\n  socket.on('messages', messages => {\n    console.log('messages', messages);\n    messages = messages.map(msg => `${msg.user_name} said ${msg.message} at ${msg.timestamp}`); // client side\n    setChats(chats => messages);\n  });\n  useEffect(() => {\n    (async function anon() {\n      await socket.on(\"connection\", () => {\n        console.log('socket connected');\n      });\n      socket.on('message', message => {\n        console.log('message', message);\n        message = `${message.userName} said ${message.message} at ${message.timeStamp}`;\n        console.log(\"chats\", chats, \"more\", [...chats, message]);\n        setChats(chats => [...chats, message]);\n      });\n    })();\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('pong');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatRoom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: chats.map((msg, index) => {\n        console.log(chats);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => {\n        setMyMessage(myMessage => event.target.value);\n        console.log(myMessage);\n      },\n      onKeyDown: event => {\n        if (event.key !== 'Enter') return;\n        const timeStamp = new Date();\n        const parsedTime = timeStamp.toLocaleTimeString().split(' ')[0];\n        console.log(\"userName\", userName);\n        const messageObj = {\n          message: myMessage,\n          timeStamp: parsedTime,\n          userName\n        };\n        socket.emit('message', messageObj);\n\n        //   socket.on('connection', function (socket) {\n        //     socket.emit('message', messageObj)\n        //     socket.disconnect()\n        //   })\n\n        event.target.value = '';\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"logout\",\n      children: \"logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"mZm9HHfZLkKZCj0jtuQ1lkJO7Xo=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useContext","useEffect","socketio","BrowserRouter","Router","Routes","Route","Link","socket","auth","token","ChatRoom","userName","chats","setChats","myMessage","setMyMessage","on","messages","console","log","map","msg","user_name","message","timestamp","anon","timeStamp","off","index","event","target","value","key","Date","parsedTime","toLocaleTimeString","split","messageObj","emit"],"sources":["/home/vinyselopal/workSpace/chatApp2/client/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\"\nimport socketio from \"socket.io-client\"\n// import { socket, SocketContext } from \"../context/socket\"\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    Link\n} from \"react-router-dom\"\n\nconst socket = socketio('ws://localhost:8000', {auth: {\n    token: '123'\n  }})\n\n\nconst ChatRoom = ({userName}) => {\n    // const socket = useContext(SocketContext)\n    // console.log(socket)\n    const [chats, setChats] = useState([])\n    const [myMessage, setMyMessage] = useState('')\n\n    socket.on('messages', messages => {\n        console.log('messages', messages)\n        messages = messages.map(msg => `${msg.user_name} said ${msg.message} at ${msg.timestamp}`) // client side\n        setChats(chats => messages)\n    })\n\n    useEffect(\n        () => {\n(async function anon () { await \n    socket.on(\"connection\", () => {\n        console.log('socket connected')\n    })\n    \n    socket.on('message', message => {\n    console.log('message', message)\n    message = `${message.userName} said ${message.message} at ${message.timeStamp}`\n    console.log(\"chats\", chats, \"more\", [...chats, message])\n    setChats(chats => [...chats, message])\n\n})\n})()\n\n\nreturn () => {\n    socket.off('connect')\n    socket.off('disconnect')\n    socket.off('pong')\n}\n        }, []    \n    )\n\n    return (\n        <div>\n            <h1>ChatRoom</h1>\n            <ul>\n                {chats.map((msg, index) => {\n                    console.log(chats)\n                    return <li key={index}>{msg}</li>\n                })}\n            </ul>\n            <input type=\"text\" onChange={(event) => {\n                setMyMessage(myMessage => event.target.value)\n                console.log(myMessage)\n            }} onKeyDown={(event) => {\n                if (event.key !== 'Enter') return\n  const timeStamp = new Date()\n  const parsedTime = timeStamp.toLocaleTimeString().split(' ')[0]\n  console.log(\"userName\", userName)\n  const messageObj = {\n    message: myMessage,\n    timeStamp: parsedTime,\n    userName\n  }\n  socket.emit('message', messageObj)\n\n//   socket.on('connection', function (socket) {\n//     socket.emit('message', messageObj)\n//     socket.disconnect()\n//   })\n  \n  event.target.value = ''\n            }}/>\n            <button value=\"logout\">logout</button>\n        </div>  \n    )\n}\n\nexport default ChatRoom\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}